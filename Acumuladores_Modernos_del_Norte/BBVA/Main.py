# External libraries

import pandas as pd

# Local modules

import PDF2Excel as P2E
import PDF2Excel_Extraction as P2EE
import Excel_Extraction as Excel

#         INSERT DATA HERE  :D

"""
Para identificar los movimientos financieros, debemos identificar las palabras clave en la lectura del PDF. Al encontrar una de estas en una línea, tendremos una
cantidad que deberá ser registrada

Lista de palabras:
Ingresos:
- VENTAS DEBITO (V42)
- VENTAS CREDITO (V45)
- SPEI RECIBOBANORTE (T20)
- SPEI RECIBIDOHSBC (T20)
- DEPOSITO EN EFECTIVO (C02)
- DEPOSITO EFECTIVO PRACTIC (AA7)
- PAGO CUENTA DE TERCERO (N06)
- DEP. CHEQUES DE OTRO BANCO (C07)
- DEPOSITO POR CORRECCION (B23)
- DEPOSITO DE TERCERO API (AP6)
- VENTAS TDC INTER (I72)

Egresos:
- COMISION VENTAS DEBITO (V43)
- COMISION VENTAS CREDITO (V46)
- SPEI ENVIADO BAJIO (T17)
- IVA COM. VENTAS DEBITO (V44)
- IVA COM. VENTAS CREDITO (V47)
- CHEQUE DEVUELTO (C13)
- SERV BANCA INTERNET (S39)
- IVA COM SERV BCA INTERNET (S40)
- AMERICAN EXPRESS (P14)
- COM VTAS TDC INTER (I73)
- IVA COM VTAS TDC INTER (I74)
"""

    # PDF2Excel

PDF_path = "C:/Users/PuntodeVenta/Documents/Luis Adrian/Bank_Reconciliation_AMN_Dev/AMN BBVA Edo Cta Junio 2024.pdf"        # PDF Path

key_words = ["VENTAS DEBITO", "VENTAS CREDITO", "T20 SPEI", "SPEI RECIBIDOHSBC", "DEPOSITO EN EFECTIVO",                    # Key words
            "DEPOSITO EFECTIVO PRACTIC", "PAGO CUENTA DE TERCERO", "DEP.CHEQUES DE OTRO BANCO", 
            "DEPOSITO POR CORRECCION", "DEPOSITO DE TERCERO API", "VENTAS TDC INTER", 

            "COMISION VENTAS DEBITO", "COMISION VENTAS CREDITO", "SPEI ENVIADO BAJIO", "IVA COM. VENTAS DEBITO",
            "IVA COM. VENTAS CREDITO", "CHEQUE DEVUELTO", "SERV BANCA INTERNET", "IVA COM SERV BCA INTERNET", 
            "AMERICAN EXPRESS", "COM VTAS TDC INTER", "IVA COM VTAS TDC INTER"]

PDF_Excel_path = "PDF2Excel.xlsx"                                                                                           # Excel File name

    # PDF2Excel_Extraction

key_words_Ingresos = ["V42", "V42", "T20", "T20", "C02", "AA7", "N06", "DEP", "C07", "B23", "AP6", "I72"]                   # Key Words Ingresos
key_words_Egresos = ["V43", "V46", "T17", "V44", "V47", "C13", "S39", "S40", "P14", "I73", "I74"]                           # Key Words Egresos

PDF_Columna_para_fechas = 0                                                                                                 # Excel Column for Dates data
PDF_Columna_para_movimientos = 1                                                                                            # Excel Column for Data
PDF_Columna_para_referencias = 2                                                                                            # Excel Column for References data
PDF_Columna_para_beneficiario = 3                                                                                           # Excel Column for Beneficiary data
   
PDF_HEADER = 2                                                                                                              # Rows over the table unnecessary for analysis
    
    # Excel_Extraction

Excel_path = "Auxiliar de bancos JUNIO BBVA.xlsx"                                                                           # Excel File name
Columna_para_fechas = 0                                                                                                     # Excel Column for Dates data
Columna_para_beneficiario = 5                                                                                               # Excel Column for Beneficiary data
Columna_para_referencias = 7                                                                                                # Excel Column for References data
Columna_para_ingresos = 9                                                                                                   # Excel Column for Incomes data
Columna_para_egresos = 8                                                                                                    # Excel Column for Outcomes data
   
HEADER = 18                                                                                                                 # Rows over the table unnecessary for analysis

    # MAIN
    
Nombre_del_archivo_de_salida = 'Conciliación_Junio.xlsx'                                                                    # Name of Excel File generated by the program
Margen_de_error = 1                                                                                                         # Error Margin of One Unit (Mexican Peso)
Margen_de_error_temporal = 3                                                                                                # Error Margin of three days


#        Beggining of algorithm

# Functions

def Comparador(Lista_de_valores_Banco, Lista_de_Fechas_Banco, Lista_de_valores_Auxiliar, Lista_de_Fechas_Auxiliar, Valores_en_ambas_listas, Fechas_en_ambas_listas, Valores_en_ninguna_lista, Fechas_en_ninguna_lista, Referencias, Beneficiarios):

   for i, A in enumerate(Lista_de_valores_Banco):
    
       fecha_A = Lista_de_Fechas_Banco[i]
       Found = False

       for j, B in enumerate(Lista_de_valores_Auxiliar):
       
          fecha_B = Lista_de_Fechas_Auxiliar[j]

          if fechas_dentro_del_margen(fecha_A, fecha_B, Margen_de_error_temporal) and valores_dentro_del_margen(A, B, Margen_de_error) and (A not in Valores_en_ambas_listas or Lista_de_Fechas_Banco[i] not in Fechas_en_ambas_listas or Lista_de_valores_Banco.count(A) > 1):

               Valores_en_ambas_listas.append(A)
               Fechas_en_ambas_listas.append(fecha_A)
               Found = True
               print(f"\033[1mConsistente     Banco  |  Auxiliar\033[0m")
               print(f"Cantidad:     {A}  -  {B}  ")
               print(f"Fecha:      {fecha_A}   -   {fecha_B}")
               print("")
               Lista_de_valores_Auxiliar[j] = 0
               Referencias[i] = "0"
               Beneficiarios[i] = "0"
               break

       if not Found:

           Valores_en_ninguna_lista.append(A)
           Fechas_en_ninguna_lista.append(fecha_A)
           print(f"\033[1mInconsistente:\033[0m {A}")
           print(f"Fecha: {Lista_de_Fechas_Banco[i]}")
           print("")
           
   print("")
   print("-------------------------------------------------------------------------------------------------")
   print("")
        
   return Valores_en_ambas_listas, Fechas_en_ambas_listas, Valores_en_ninguna_lista, Fechas_en_ninguna_lista

def fechas_dentro_del_margen(fecha1, fecha2, margen):
    return abs(fecha1 - fecha2) <= margen or abs(fecha1 - fecha2) == 0 

def valores_dentro_del_margen(valor1, valor2, margen):
    return abs(valor1 - valor2) <= margen

def Dataframe_Construction(Fechas_en_ninguna_lista, valores_en_ninguna_lista, Referencias, Beneficiarios):
    
    Inconsistencias_Dataframe = {
    'Fechas': Fechas_en_ninguna_lista,
    'Importe': valores_en_ninguna_lista,
    'Referencias': Referencias, 
    'Beneficiario / Ordenante': Beneficiarios}
    
    Inconsistencias_Dataframe = pd.DataFrame(Inconsistencias_Dataframe)
    
    return Inconsistencias_Dataframe

def Excel_Construction(Table_title, Tabla_Inconsistencias):
    
    General_header = pd.DataFrame([[Table_title, "", "", ""]],
    columns = ['Fechas', 'Importe', 'Referencias', 'Beneficiario / Ordenante'])
    
    Tabla_Inconsistencias_Excel = pd.concat([General_header, Tabla_Inconsistencias], ignore_index = True)
    
    return Tabla_Inconsistencias_Excel

# Data Set-up

"""
1. PDF to Excel conversion
2. Data extraction of converted PDF (Excel)
3. Excel data extraction
"""

PDF2Excel = P2E.PDF2Excel(PDF_path, key_words, PDF_Excel_path)
Lista_de_valores_MNA_BBVA_Ingresos, Lista_de_valores_MNA_BBVA_Egresos, Lista_de_valores_MNA_BBVA_Fechas_Ingresos, Lista_de_valores_MNA_BBVA_Fechas_Egresos, Referencias_MNA_BBVA_Ingresos, Referencias_MNA_BBVA_Egresos, Beneficiarios_MNA_BBVA_Ingresos, Beneficiarios_MNA_BBVA_Egresos = P2EE.Value_extraction(key_words_Ingresos, key_words_Egresos, PDF_Excel_path, PDF_Columna_para_fechas, PDF_Columna_para_movimientos, PDF_Columna_para_referencias, PDF_Columna_para_beneficiario, PDF_HEADER)
Lista_de_valores_Auxiliar_Ingresos, Lista_de_valores_Auxiliar_Egresos, Lista_de_valores_Auxiliar_Fechas_Ingresos, Lista_de_valores_Auxiliar_Fechas_Egresos, Referencias_Auxiliar_Ingresos, Referencias_Auxiliar_Egresos, Beneficiarios_Auxiliar_Ingresos, Beneficiarios_Auxiliar_Egresos = Excel.Value_extraction(Excel_path, Columna_para_fechas, Columna_para_beneficiario, Columna_para_referencias, Columna_para_ingresos, Columna_para_egresos, HEADER)

print("")
print("            Conciliación Bancaria")
print("")

# Variables declaration

#    BBVA Income
Ingresos_en_ambas_listas_MNA_BBVA = []
Fechas_en_ambas_listas_Ingresos_MNA_BBVA = []
Valores_en_ninguna_lista_MNA_BBVA_Ingresos = []
Fechas_en_ninguna_lista_Ingresos_MNA_BBVA = []

#    Excel Income
Ingresos_en_ambas_listas_auxiliar = []
Fechas_en_ambas_listas_Ingresos_auxiliar = []
Valores_en_ninguna_lista_auxiliar_Ingresos = []
Fechas_en_ninguna_lista_Ingresos_auxiliar = []

#    BBVA Outcome
Egresos_en_ambas_listas_MNA_BBVA = []
Fechas_en_ambas_listas_Egresos_MNA_BBVA = []
Valores_en_ninguna_lista_MNA_BBVA_Egresos = []
Fechas_en_ninguna_lista_Egresos_MNA_BBVA = []

#    Excel Outcome
Egresos_en_ambas_listas_auxiliar = []
Fechas_en_ambas_listas_Egresos_auxiliar = []
Valores_en_ninguna_lista_auxiliar_Egresos = []
Fechas_en_ninguna_lista_Egresos_auxiliar = []

#    Auxiliary variables

Lista_de_valores_Auxiliar_Ingresos_Copia = Lista_de_valores_Auxiliar_Ingresos.copy()
Lista_de_valores_Auxiliar_Egresos_Copia = Lista_de_valores_Auxiliar_Egresos.copy()
Lista_de_valores_MNA_BBVA_Ingresos_Copia = Lista_de_valores_MNA_BBVA_Ingresos.copy()
Lista_de_valores_MNA_BBVA_Egresos_Copia = Lista_de_valores_MNA_BBVA_Egresos.copy()

# Work Cycle 1: Income Recorded in the Bank but not in Excel
Comparador(Lista_de_valores_MNA_BBVA_Ingresos_Copia, Lista_de_valores_MNA_BBVA_Fechas_Ingresos, Lista_de_valores_Auxiliar_Ingresos_Copia, Lista_de_valores_Auxiliar_Fechas_Ingresos, Ingresos_en_ambas_listas_MNA_BBVA, Fechas_en_ambas_listas_Ingresos_MNA_BBVA, Valores_en_ninguna_lista_MNA_BBVA_Ingresos, Fechas_en_ninguna_lista_Ingresos_MNA_BBVA, Referencias_MNA_BBVA_Ingresos, Beneficiarios_MNA_BBVA_Ingresos)
Referencias_MNA_BBVA_Ingresos = [x for x in Referencias_MNA_BBVA_Ingresos if x != "0"]
Beneficiarios_MNA_BBVA_Ingresos = [x for x in Beneficiarios_MNA_BBVA_Ingresos if x != "0"]

#    BBVA Income - Dataframe generation and Excel Construction
Tabla_Inconsistencias_Ingresos_MNA_BBVA = Dataframe_Construction(Fechas_en_ninguna_lista_Ingresos_MNA_BBVA, Valores_en_ninguna_lista_MNA_BBVA_Ingresos, Referencias_MNA_BBVA_Ingresos, Beneficiarios_MNA_BBVA_Ingresos)
Tabla_Inconsistencias_Ingresos_MNA_BBVA = Excel_Construction("Ingresos registrados en Banco y no en Auxiliar", Tabla_Inconsistencias_Ingresos_MNA_BBVA)

# Work Cycle 2: Outcome Recorded in the Bank but not in Excel
Comparador(Lista_de_valores_MNA_BBVA_Egresos, Lista_de_valores_MNA_BBVA_Fechas_Egresos, Lista_de_valores_Auxiliar_Egresos_Copia, Lista_de_valores_Auxiliar_Fechas_Egresos, Egresos_en_ambas_listas_MNA_BBVA, Fechas_en_ambas_listas_Egresos_MNA_BBVA, Valores_en_ninguna_lista_MNA_BBVA_Egresos, Fechas_en_ninguna_lista_Egresos_MNA_BBVA, Referencias_MNA_BBVA_Egresos, Beneficiarios_MNA_BBVA_Egresos)
Referencias_MNA_BBVA_Egresos = [x for x in Referencias_MNA_BBVA_Egresos if x != "0"]
Beneficiarios_MNA_BBVA_Egresos = [x for x in Beneficiarios_MNA_BBVA_Egresos if x != "0"]

#    BBVA Outcome - Dataframe generation and Excel Construction
Tabla_Inconsistencias_Egresos_MNA_BBVA = Dataframe_Construction(Fechas_en_ninguna_lista_Egresos_MNA_BBVA, Valores_en_ninguna_lista_MNA_BBVA_Egresos, Referencias_MNA_BBVA_Egresos, Beneficiarios_MNA_BBVA_Egresos)
Tabla_Inconsistencias_Egresos_MNA_BBVA = Excel_Construction("Egresos registrados en Banco y no en Auxiliar", Tabla_Inconsistencias_Egresos_MNA_BBVA)

# Work Cycle 3: Income Recorded in Excel but not in the Bank
Comparador(Lista_de_valores_Auxiliar_Ingresos, Lista_de_valores_Auxiliar_Fechas_Ingresos, Lista_de_valores_MNA_BBVA_Ingresos, Lista_de_valores_MNA_BBVA_Fechas_Ingresos, Ingresos_en_ambas_listas_auxiliar, Fechas_en_ambas_listas_Ingresos_auxiliar, Valores_en_ninguna_lista_auxiliar_Ingresos, Fechas_en_ninguna_lista_Ingresos_auxiliar, Referencias_Auxiliar_Ingresos, Beneficiarios_Auxiliar_Ingresos)
Referencias_Auxiliar_Ingresos = [x for x in Referencias_Auxiliar_Ingresos if x != "0"]
Beneficiarios_Auxiliar_Ingresos = [x for x in Beneficiarios_Auxiliar_Ingresos if x != "0"]

#    Excel Income - Dataframe generation and Excel Construction
Tabla_Inconsistencias_Ingresos_Auxiliar = Dataframe_Construction(Fechas_en_ninguna_lista_Ingresos_auxiliar, Valores_en_ninguna_lista_auxiliar_Ingresos, Referencias_Auxiliar_Ingresos, Beneficiarios_Auxiliar_Ingresos)
Tabla_Inconsistencias_Ingresos_Auxiliar = Excel_Construction("Ingresos registrados en Auxiliar y no en Banco", Tabla_Inconsistencias_Ingresos_Auxiliar)


# Work Cycle 3: Outcome Recorded in Excel but not in the Bank
Comparador(Lista_de_valores_Auxiliar_Egresos, Lista_de_valores_Auxiliar_Fechas_Egresos, Lista_de_valores_MNA_BBVA_Egresos, Lista_de_valores_MNA_BBVA_Fechas_Egresos, Egresos_en_ambas_listas_auxiliar, Fechas_en_ambas_listas_Egresos_auxiliar, Valores_en_ninguna_lista_auxiliar_Egresos, Fechas_en_ninguna_lista_Egresos_auxiliar, Referencias_Auxiliar_Egresos, Beneficiarios_Auxiliar_Egresos)
Referencias_Auxiliar_Egresos = [x for x in Referencias_Auxiliar_Egresos if x != "0"]
Beneficiarios_Auxiliar_Egresos = [x for x in Beneficiarios_Auxiliar_Egresos if x != "0"]

#    Excel Outcome - Dataframe generation and Excel Construction
Tabla_Inconsistencias_Egresos_Auxiliar = Dataframe_Construction(Fechas_en_ninguna_lista_Egresos_auxiliar, Valores_en_ninguna_lista_auxiliar_Egresos, Referencias_Auxiliar_Egresos, Beneficiarios_Auxiliar_Egresos)
Tabla_Inconsistencias_Egresos_Auxiliar = Excel_Construction("Egresos registrados en Auxiliar y no en Banco", Tabla_Inconsistencias_Egresos_Auxiliar)

#   Excel file export

with pd.ExcelWriter(Nombre_del_archivo_de_salida) as writer:
    Tabla_Inconsistencias_Ingresos_MNA_BBVA.to_excel(writer, sheet_name = "Ingresos Banco", index = False, header = True)
    Tabla_Inconsistencias_Egresos_MNA_BBVA.to_excel(writer, sheet_name = "Egresos Banco", index = False, header = True)
    Tabla_Inconsistencias_Ingresos_Auxiliar.to_excel(writer, sheet_name = "Ingresos Auxiliar", index = False, header = True)
    Tabla_Inconsistencias_Egresos_Auxiliar.to_excel(writer, sheet_name = "Egresos Auxiliar", index = False, header = True)

print("")
print("Archivo Excel exportado con éxito")
print("")
print("")
